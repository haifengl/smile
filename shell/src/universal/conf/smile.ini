### Setting -X directly (-J is stripped)

# Use up to 75% RAM for maximum size of heap
-J-XX:MaxRAMPercentage=75

# Or explicit heap size with Xms and Xmx Options
#-J-Xmx24G -J-Xms4G

# This parameter is on by default on 64 bit JVM
#-J-server

# Headless mode is a system configuration in which the display device,
# keyboard, or mouse is lacking. 
#-Djava.awt.headless=true

### Performance optimization

# Reduce the size of object headers in the HotSpot JVM from between 96 and
# 128 bits down to 64 bits on 64-bit architectures. This will reduce heap
# size, improve deployment density, and increase data locality.
-J-XX:+UnlockExperimentalVMOptions -J-XX:+UseCompactObjectHeaders

# Enable the large page size to optimize processor TLB.
#-J-XX:+UseLargePages -J-XX:LargePageSizeInBytes=2M

# G1 garbage collector is generally considered a safe default.
#-J-XX:+UseG1GC

# Scalable garbage collector, designed for applications that
# require large heaps and strict pause time requirements.
-J-XX:+UseZGC

# UseCompressedOop is on by default for up to 32GB heap.
# The below tuning enables it up to 64GB with object alignment at 16.
#-J-XX:+UseCompressedOops -J-XX:ObjectAlignmentInBytes=16

# Enable NUMA-aware allocators.
# JVM automatically turns off the flag when run on a single node
-J-XX:+UseNUMA

# Optimize string duplication, which happens a lot when parsing a data file.
-J-XX:+UseStringDeduplication
# Optimize String concatenation operations where possible.
#-J-XX:+OptimizeStringConcat

# Turn on JVM debugging, open at the given port
# -jvm-debug <port>
-J-XX:-PrintGCDetails

# Don't run the java version check
# -no-version-check

# enabling debug and sending -d as app argument
# the '--' prevents app-parameter swallowing when
# using a reserved parameter. See #184
# -d -- -d
